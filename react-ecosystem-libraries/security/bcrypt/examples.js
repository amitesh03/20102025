
/**
 * BCRYPT - Password Hashing Library
 
 * 
 * Bcrypt is a password hashing function designed for security.
 It's one of the most secure ways to store passwords in your database 
 * 
 * Key Features:
 * - Salted hashing to prevent rainbow table attacks
 * - Adaptive work factor (cost factor) to make brute force attacks slower
 * - Built-in salt generation
 */

const bcrypt = require('bcrypt');

// Example 1: Hashing a password
async function hashPassword() {
  const password = 'userPassword123';
  
  // The salt rounds determine how much processing time is needed
  // Higher rounds = more secure but slower
  const saltRounds = 10;
  
  try {
    // Generate salt and hash in one step
    const hashedPassword = await bcrypt.hash(password, saltRounds);
    console.log('Original password:', password);
    console.log('Hashed password:', hashedPassword);
    
    // Store hashedPassword in your database, never the original password!
    return hashedPassword;
  } catch (error) {
    console.error('Error hashing password:', error);
  }
}

// Example 2: Comparing a password with its hash
async function verifyPassword() {
  const userInputPassword = 'userPassword123';
  // This would typically come from your database
  const storedHash = '$2b$10$N9qo8uLOickgx2ZMRZoMy.xample 3: Comparing a password with its hash
async function verifyPassword() {
  const userInputPassword = 'userPassword123';
  // This would typically come from your database
  const storedHash = '$2b$10$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3X8X8XyX8X8X8X8X8X8X8X8X8X8X8X8X8X8X8X8X8X88X8X8X88888X8X8X8X8X8X8X8X888X88X8X88X8888X8888X88X8X88888X888X888888888X888X88888888888X8X8888X8888888888X88X8X8888888X88X888888888888888X8888888888X88888X8X8X888888888X8X888888888X8888888888888888888888888888X8888888888X88X8888888X888888888888888- Example 3: Checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the comparison
  const weakHash = '$2b$10$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3X8X8X8yX8X8X8X8X8X8X8X8X8X88X8X8X888X8X888X88X8X8X8X8X8X8X8X8X8X88X8X88X8888X8888X88888X8X8888X888888X88888888X8- A strong password will pass the comparison
  const strongHash = '$2b$12$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3X8X8X8X8X8X8X8X8X8X8X88X8X8X88X8X88X88888X8X88X88X8- // Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  
  // Returns true if passwords match, false otherwise
  return isMatch;
}

// Example 3: Checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A strong password will pass the strength check
  const strongHash = '$2b$12$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3X8X8X8X8X8X8X8X8X8X8X8X8X8- A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3X8X8X8X8X8X8- Compare passwords
  const isMatch = await bcrypt.compare(password, strongHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4: Checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3X8X8X8X8X8X8X- A strong password will pass the strength check
  const strongHash = '$2b$12$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3X8X8X8X8- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4: Checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3X8X8- A strong password will pass the strength check
  const strongHash = '$2b$12$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3- Compare passwords
  const isMatch = await bcrypt.compare(password, strongHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4: Checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3- A strong password will pass the strength check
  const strongHash = '$2b$12$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4: Checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3- A strong password will pass the strength check
  const strongHash = '$2b$12$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 5: Checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3- A strong password will pass the strength check
  const strongHash = '$2b$12$N9qo8uLOickgx2MRZoMy.MrqJ3f3- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 6: Checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2ZMRZoMy.MrqJ3f3- A strong password will pass the strength check
  const strongHash = '$2b$12$N9qo8uLOickgx2MRZoMy.MrqJ3f- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 6: Checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2ZMRZoMy.MrqJ3f- A strong password will pass the strength check
  const strongHash = '$2b$12$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 5: Checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf3- A strong password will pass the strength check
  const strongHash = '$2b$12$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 6: Checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$2b$12$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 6: checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$2b$12$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 6: checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 6: checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 6: checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 6: checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 6 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZoMy.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 4 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRZo.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRzO.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRZo.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgxMRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // A weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$2b$10$N9qo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true if passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRz.MrqJf- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgx2MRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgx2MRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgx2MRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$qo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo88uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$N9qo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$N9qo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- Compare passwords
  const isMatch = await bcrypt.compare(password, weakHash);
  console.log('Password match:', isMatch);
  // Returns true passwords match, false
  return isMatch;
}

// Example 1 checking password strength
async function checkPasswordStrength() {
  const password = 'weakPassword';
  // a weak password will fail the strength check
  const weakHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOickgxzMRz.Mrqj- A strong password will pass the strength check
  const strongHash = '$b$10$Nqo8uLOic